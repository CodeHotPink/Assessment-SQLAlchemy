Put your answers to the knowledge quiz here.
1. B
2. A
3. D
4. A
5. D
6. A
7. D
8. B
9. It's a design pattern to follow to maintain integrity between tables/dbs. You enforce it by setting relationships between tables to prevent someone from accidentally modifying a row(s) which would effect another table. 
I forgot so I'm pretty much bsing this based off of question 7.
10. Data normalization is when the data is encapsulated in classes. This allows us to access the data more easily and gives us more options. 
Also bsing :)
11. 
Dish Table:
Notes - table that lists the name & description
	* primary key Column: "dish id" 
	Column: "dish name"
	Column: "dish description"
Nutritional Table:
Notes - since not all dishes will have this information off the bat it's better to have it as a separate table until they get the information. 
	* foreign key Column : "dish id"
	Column: "calories"
	Column: "healthy"
	Column: "vegetarian"
	Column: "vegan"
	Column: "gluten free"
	Column: "dairy free"
Menu Table:
Notes - table that list the type of menu, with start & end time
	* primary key Column: "menu id"
	Column: "menu type"
	Column: "start time"
	Column: "end time"
Price Table:
Notes - table that lists dish prices by menu. I could add a function in SQLAlchemy that serves as a conditional for the menu priced based off menu id.
	* primary key Column: "price id"
	Column: "dish id" relational column from Dish Table
	Column: "menu id" relational column from Menu Table
	Column: "menu price"